name: CI to Docker Hub

on:
  push:
    tags:
      - v*

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Install and Build
        run: |
          yarn
          yarn build

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        run:
          IMAGE_NAME = v-chat-io
          # 从 GitHub.ref 中取出版本
          IMAGE_VERSION = echo "${{ github.ref }}" | sed -e "s,.*/\(.*\),\1,"
          [ "${{ github.ref }}" == "refs/tags/"* ] && VERSION = echo $VERSION | sed -e "s/^v//"
          [ "$IMAGE_VERSION" == "master" ] && IMAGE_VERSION = latest
          echo IMAGE_NAME = $IMAGE_NAME
          echo IMAGE_VERSION = $IMAGE_VERSION
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ IMAGE_NAME }}:${{ IMAGE_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
