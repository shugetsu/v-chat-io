name: CI to Docker Hub

on:
  push:
    tags:
      - v*

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2
        id: prep
        run: |
            DOCKER_IMAGE=${secrets.DOCKER_HUB_USERNAME}/v-chat-io
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/v}
            fi
            TAGS="${DOCKER_IMAGE}:${VERSION}"
            if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              TAGS="$TAGS,${DOCKER_IMAGE}:latest"
            fi
            echo ::set-output name=tags::${TAGS}

      - name: Install and Build
        run: |
          yarn
          yarn build

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ IMAGE_NAME }}:${{ IMAGE_VERSION }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
